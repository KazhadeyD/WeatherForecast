{"version":3,"file":"main.bundle.js","mappings":"mBAAA,MAAMA,EAAU,mCAQTC,eAAeC,EAAiBC,GACrC,MAAMC,EAAO,qDAAqDD,gCAAuCH,IACnGK,QAAYC,MAAMF,GACxB,aAAaC,EAAIE,OCXnB,MAAMC,EAAc,cAEb,SAASC,IACd,MAAMC,EAAaC,aAAaC,QAAQJ,GACxC,OAAmB,OAAfE,GACFG,QAAQC,IAAI,iBACL,MAGFJ,EAAWK,MAAM,KCTnB,SAASC,EAAOC,EAAKC,GACZC,SAASC,cAAc,QAC/BC,IAAM,yCAAyCH,KAAOD,mBAAqBC,KAAOD,SCiC1F,SAASK,IACP,MAAMC,EAAWd,IACjB,GAAwB,OAApBc,EAASC,OACX,OAEF,MAAMC,EAAON,SAASC,cAAc,iBACpCK,EAAKC,UAAY,GAEjBH,EAASI,SAAQ,CAACC,EAAMC,KACtB,MAAMC,EAAKX,SAASY,cAAc,MAClCD,EAAGE,UAAYJ,EACfE,EAAGG,iBAAiB,SAAShC,UAC3B,MAAMiC,QAAgBhC,EAAiB0B,GACfT,SAASC,cAAc,yBAC/BM,UAAY,wBAAwBE,8DACLM,EAAc,KAAQ,eAErElB,EAAOkB,EAAQC,MAAMlB,IAAKiB,EAAQC,MAAMjB,QAE1CO,EAAKW,YAAYN,MAhDPX,SAASkB,eAAe,iBAChCJ,iBAAiB,SAAShC,UAC5B,MAAM2B,EAAOT,SAASkB,eAAe,aAAaC,MAClD,GAAa,OAATV,EACF,OAEF,MAAMM,QAAgBhC,EAAiB0B,GACfT,SAASC,cAAc,yBAC/BM,UAAY,wBAAwBE,4DACLM,EAAQK,KAAKC,eAE5DxB,EAAOkB,EAAQC,MAAMlB,IAAKiB,EAAQC,MAAMjB,KFLrC,SAA2Bf,GAChC,GAAiB,OAAbA,EACF,OAGF,MAAMoB,EAAWd,KAAqB,GAClCc,EAASC,OAAS,GACpBD,EAASkB,QAEXlB,EAASmB,KAAKvC,GAEdQ,aAAagC,QAAQnC,EAAae,EAASqB,KAAK,MEL9CC,CAAkBjB,GAClBN,OAIJrB,iBACE,MAAM6C,QCxBD7C,iBACL,MAAMqC,QAAchC,MAChB,uCAGED,QAAYiC,EAAM/B,OAClBuC,EAAW,GAIjB,OAHAA,EAAoB,UAAIzC,EAAe,UACvCyC,EAAmB,SAAIzC,EAAc,SAE9ByC,EDcgBC,GAEjBb,QHxBDjC,eAAoCgB,EAAKC,GAC9C,MAAMd,EAAO,uDAAuDa,SAAWC,gCAAkClB,IAC3GK,QAAYC,MAAMF,GACxB,aAAaC,EAAIE,OGqBKyC,CAAqBF,EAAmB,SAAGA,EAAoB,WAC7D3B,SAASC,cAAc,iBAC/BM,UAAY,kBAAkBQ,EAAc,8DACZA,EAAc,KAAQ,gFAGtElB,EAAO8B,EAAmB,SAAGA,EAAoB,WA2BnDP,GACAjB,K","sources":["webpack://weatherforecast/./src/weather.js","webpack://weatherforecast/./src/localStorage.js","webpack://weatherforecast/./src/yaMap.js","webpack://weatherforecast/./src/index.js","webpack://weatherforecast/./src/geo.js"],"sourcesContent":["const API_KEY = \"c1d953812265ca6dc359df36112a41c6\";\n\nexport async function getWeatherByGeoCoord(lat, lon) {\n  const path = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&lang=en&units=metric&appid=${API_KEY}`;\n  const res = await fetch(path);\n  return await res.json();\n}\n\nexport async function getWeatherBycity(cityName) {\n  const path = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&lang=en&units=metric&appid=${API_KEY}`;\n  const res = await fetch(path);\n  return await res.json();\n}\n","const HISTORY_KEY = \"cityHistory\";\n\nexport function loadCityHistory() {\n  const cityString = localStorage.getItem(HISTORY_KEY);\n  if (cityString === null) {\n    console.log(\"No city found\");\n    return null;\n  }\n\n  return cityString.split(\",\");\n}\n\nexport function saveCityToHistory(cityName) {\n  if (cityName === null) {\n    return;\n  }\n\n  const cityList = loadCityHistory() ?? [];\n  if (cityList.length > 9) {\n    cityList.shift();\n  }\n  cityList.push(cityName);\n\n  localStorage.setItem(HISTORY_KEY, cityList.join(\",\"));\n}\n","export function getMap(lat, lon) {\n  const mapEl = document.querySelector(\"#map\");\n  mapEl.src = `https://static-maps.yandex.ru/1.x/?ll=${lon},${lat}&z=10&l=map&pt=${lon},${lat},flag`;\n}\n","import {getCurrentGeoPos} from \"./geo\";\nimport {getWeatherByGeoCoord, getWeatherBycity} from \"./weather\";\nimport {loadCityHistory, saveCityToHistory} from \"./localStorage\";\nimport {getMap} from \"./yaMap\";\n\nfunction subscribe() {\n  const btn = document.getElementById(\"btnGetWeather\");\n  btn.addEventListener(\"click\", async () => {\n    const city = document.getElementById(\"inputCity\").value;\n    if (city === null) {\n      return;\n    }\n    const weather = await getWeatherBycity(city);\n    const weatherInfoElem = document.querySelector(\"#weather-info-in-city\");\n    weatherInfoElem.innerHTML = `<li>Введенный город: ${city}</li>\n                                <li>Температура: ${weather.main.temp} C°</li>`;\n\n    getMap(weather.coord.lat, weather.coord.lon);\n    saveCityToHistory(city);\n    createCityList();\n  });\n}\n\nasync function main() {\n  const position = await getCurrentGeoPos();\n\n  const weather = await getWeatherByGeoCoord(position[\"latitude\"], position[\"longitude\"]);\n  const weatherInfoElem = document.querySelector(\"#weather-info\");\n  weatherInfoElem.innerHTML = `<li>Ваш город: ${weather[\"name\"]}</li>\n                               <li>Температура: ${weather[\"main\"][\"temp\"]} C°</li>\n                               <li><i>Место под иконку</i></li>`;\n\n  getMap(position[\"latitude\"], position[\"longitude\"]);\n}\n\nfunction createCityList() {\n  const cityList = loadCityHistory();\n  if (cityList.length === null) {\n    return;\n  }\n  const list = document.querySelector(\"#city-history\");\n  list.innerHTML = \"\";\n\n  cityList.forEach((city, index)=> {\n    const li = document.createElement(\"li\");\n    li.innerText = city;\n    li.addEventListener(\"click\", async () => {\n      const weather = await getWeatherBycity(city);\n      const weatherInfoElem = document.querySelector(\"#weather-info-in-city\");\n      weatherInfoElem.innerHTML = `<li>Введенный город: ${city}</li>\n                                  <li>Температура: ${weather[\"main\"][\"temp\"]} C°</li>`;\n\n      getMap(weather.coord.lat, weather.coord.lon);\n    });\n    list.appendChild(li);\n  });\n}\n\nsubscribe();\nmain();\ncreateCityList();\n","export async function getCurrentGeoPos() {\n  const value = await fetch(\n      \"https://get.geojs.io/v1/ip/geo.json\",\n  );\n\n  const res = await value.json();\n  const position = {};\n  position[\"longitude\"] = res[\"longitude\"];\n  position[\"latitude\"] = res[\"latitude\"];\n\n  return position;\n}\n"],"names":["API_KEY","async","getWeatherBycity","cityName","path","res","fetch","json","HISTORY_KEY","loadCityHistory","cityString","localStorage","getItem","console","log","split","getMap","lat","lon","document","querySelector","src","createCityList","cityList","length","list","innerHTML","forEach","city","index","li","createElement","innerText","addEventListener","weather","coord","appendChild","getElementById","value","main","temp","shift","push","setItem","join","saveCityToHistory","position","getCurrentGeoPos","getWeatherByGeoCoord"],"sourceRoot":""}