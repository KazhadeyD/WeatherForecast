{"version":3,"file":"main.bundle.js","mappings":"mBAAA,MAAMA,EAAU,mCAQTC,eAAeC,EAAiBC,GACrC,MAAMC,EAAO,qDAAqDD,gCAAuCH,IACnGK,QAAYC,MAAMF,GACxB,aAAaC,EAAIE,OCXnB,MAAMC,EAAc,cAEb,SAASC,IACd,MAAMC,EAAaC,aAAaC,QAAQJ,GACxC,OAAmB,OAAfE,GACFG,QAAQC,IAAI,iBACL,MAGFJ,EAAWK,MAAM,KCTnB,SAASC,EAAOC,EAAKC,GACZC,SAASC,cAAc,QAC/BC,IAAM,yCAAyCH,KAAOD,mBAAqBC,KAAOD,SCiC1F,SAASK,IACP,MAAMC,EAAWd,IACjB,GAAwB,OAApBc,EAASC,OACX,OAEF,MAAMC,EAAON,SAASC,cAAc,iBACpCK,EAAKC,UAAY,GAEjBH,EAASI,SAAQ,CAACC,EAAMC,KACtB,MAAMC,EAAKX,SAASY,cAAc,MAClCD,EAAGE,UAAYJ,EACfE,EAAGG,iBAAiB,SAAShC,UAC3B,MAAMiC,QAAgBhC,EAAiB0B,GACfT,SAASC,cAAc,yBAC/BM,UAAY,wBAAwBE,8DACLM,EAAc,KAAQ,eAErElB,EAAOkB,EAAQC,MAAMlB,IAAKiB,EAAQC,MAAMjB,QAE1CO,EAAKW,YAAYN,MAhDPX,SAASkB,eAAe,iBAChCJ,iBAAiB,SAAShC,UAC5B,MAAM2B,EAAOT,SAASkB,eAAe,aAAaC,MAClD,GAAa,OAATV,EACF,OAEF,MAAMM,QAAgBhC,EAAiB0B,GACfT,SAASC,cAAc,yBAC/BM,UAAY,wBAAwBE,4DACLM,EAAQK,KAAKC,eAE5DxB,EAAOkB,EAAQC,MAAMlB,IAAKiB,EAAQC,MAAMjB,KFLrC,SAA2Bf,GAChC,GAAiB,OAAbA,EACF,OAGF,MAAMoB,EAAWd,KAAqB,GAClCc,EAASC,OAAS,GACpBD,EAASkB,QAEXlB,EAASmB,KAAKvC,GAEdQ,aAAagC,QAAQnC,EAAae,EAASqB,KAAK,MEL9CC,CAAkBjB,GAClBN,OAIJrB,iBACE,MAAM6C,QCxBD7C,iBACL,MAAMqC,QAAchC,MAChB,uCAGED,QAAYiC,EAAM/B,OAClBuC,EAAW,GAIjB,OAHAA,EAAoB,UAAIzC,EAAe,UACvCyC,EAAmB,SAAIzC,EAAc,SAE9ByC,EDcgBC,GAEjBb,QHxBDjC,eAAoCgB,EAAKC,GAC9C,MAAMd,EAAO,uDAAuDa,SAAWC,gCAAkClB,IAC3GK,QAAYC,MAAMF,GACxB,aAAaC,EAAIE,OGqBKyC,CAAqBF,EAAmB,SAAGA,EAAoB,WAC7D3B,SAASC,cAAc,iBAC/BM,UAAY,kBAAkBQ,EAAc,8DACZA,EAAc,KAAQ,gFAGtElB,EAAO8B,EAAmB,SAAGA,EAAoB,WA2BnDP,GACAjB,K","sources":["webpack://weatherforecast/./src/weather.js","webpack://weatherforecast/./src/localStorage.js","webpack://weatherforecast/./src/yaMap.js","webpack://weatherforecast/./src/index.js","webpack://weatherforecast/./src/geo.js"],"sourcesContent":["const API_KEY = \"c1d953812265ca6dc359df36112a41c6\";\r\n\r\nexport async function getWeatherByGeoCoord(lat, lon) {\r\n  const path = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&lang=en&units=metric&appid=${API_KEY}`;\r\n  const res = await fetch(path);\r\n  return await res.json();\r\n}\r\n\r\nexport async function getWeatherBycity(cityName) {\r\n  const path = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&lang=en&units=metric&appid=${API_KEY}`;\r\n  const res = await fetch(path);\r\n  return await res.json();\r\n}\r\n","const HISTORY_KEY = \"cityHistory\";\r\n\r\nexport function loadCityHistory() {\r\n  const cityString = localStorage.getItem(HISTORY_KEY);\r\n  if (cityString === null) {\r\n    console.log(\"No city found\");\r\n    return null;\r\n  }\r\n\r\n  return cityString.split(\",\");\r\n}\r\n\r\nexport function saveCityToHistory(cityName) {\r\n  if (cityName === null) {\r\n    return;\r\n  }\r\n\r\n  const cityList = loadCityHistory() ?? [];\r\n  if (cityList.length > 9) {\r\n    cityList.shift();\r\n  }\r\n  cityList.push(cityName);\r\n\r\n  localStorage.setItem(HISTORY_KEY, cityList.join(\",\"));\r\n}\r\n","export function getMap(lat, lon) {\r\n  const mapEl = document.querySelector(\"#map\");\r\n  mapEl.src = `https://static-maps.yandex.ru/1.x/?ll=${lon},${lat}&z=10&l=map&pt=${lon},${lat},flag`;\r\n}\r\n","import {getCurrentGeoPos} from \"./geo\";\r\nimport {getWeatherByGeoCoord, getWeatherBycity} from \"./weather\";\r\nimport {loadCityHistory, saveCityToHistory} from \"./localStorage\";\r\nimport {getMap} from \"./yaMap\";\r\n\r\nfunction subscribe() {\r\n  const btn = document.getElementById(\"btnGetWeather\");\r\n  btn.addEventListener(\"click\", async () => {\r\n    const city = document.getElementById(\"inputCity\").value;\r\n    if (city === null) {\r\n      return;\r\n    }\r\n    const weather = await getWeatherBycity(city);\r\n    const weatherInfoElem = document.querySelector(\"#weather-info-in-city\");\r\n    weatherInfoElem.innerHTML = `<li>Введенный город: ${city}</li>\r\n                                <li>Температура: ${weather.main.temp} C°</li>`;\r\n\r\n    getMap(weather.coord.lat, weather.coord.lon);\r\n    saveCityToHistory(city);\r\n    createCityList();\r\n  });\r\n}\r\n\r\nasync function main() {\r\n  const position = await getCurrentGeoPos();\r\n\r\n  const weather = await getWeatherByGeoCoord(position[\"latitude\"], position[\"longitude\"]);\r\n  const weatherInfoElem = document.querySelector(\"#weather-info\");\r\n  weatherInfoElem.innerHTML = `<li>Ваш город: ${weather[\"name\"]}</li>\r\n                               <li>Температура: ${weather[\"main\"][\"temp\"]} C°</li>\r\n                               <li><i>Место под иконку</i></li>`;\r\n\r\n  getMap(position[\"latitude\"], position[\"longitude\"]);\r\n}\r\n\r\nfunction createCityList() {\r\n  const cityList = loadCityHistory();\r\n  if (cityList.length === null) {\r\n    return;\r\n  }\r\n  const list = document.querySelector(\"#city-history\");\r\n  list.innerHTML = \"\";\r\n\r\n  cityList.forEach((city, index)=> {\r\n    const li = document.createElement(\"li\");\r\n    li.innerText = city;\r\n    li.addEventListener(\"click\", async () => {\r\n      const weather = await getWeatherBycity(city);\r\n      const weatherInfoElem = document.querySelector(\"#weather-info-in-city\");\r\n      weatherInfoElem.innerHTML = `<li>Введенный город: ${city}</li>\r\n                                  <li>Температура: ${weather[\"main\"][\"temp\"]} C°</li>`;\r\n\r\n      getMap(weather.coord.lat, weather.coord.lon);\r\n    });\r\n    list.appendChild(li);\r\n  });\r\n}\r\n\r\nsubscribe();\r\nmain();\r\ncreateCityList();\r\n","export async function getCurrentGeoPos() {\r\n  const value = await fetch(\r\n      \"https://get.geojs.io/v1/ip/geo.json\",\r\n  );\r\n\r\n  const res = await value.json();\r\n  const position = {};\r\n  position[\"longitude\"] = res[\"longitude\"];\r\n  position[\"latitude\"] = res[\"latitude\"];\r\n\r\n  return position;\r\n}\r\n"],"names":["API_KEY","async","getWeatherBycity","cityName","path","res","fetch","json","HISTORY_KEY","loadCityHistory","cityString","localStorage","getItem","console","log","split","getMap","lat","lon","document","querySelector","src","createCityList","cityList","length","list","innerHTML","forEach","city","index","li","createElement","innerText","addEventListener","weather","coord","appendChild","getElementById","value","main","temp","shift","push","setItem","join","saveCityToHistory","position","getCurrentGeoPos","getWeatherByGeoCoord"],"sourceRoot":""}